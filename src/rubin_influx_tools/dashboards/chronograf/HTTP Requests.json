{
	"meta": {
		"chronografVersion": "1.9.4",
		"sources": {
			"1": {
				"name": "InfluxDB",
				"link": "/chronograf/v1/sources/1"
			}
		}
	},
	"dashboard": {
		"id": "6",
		"cells": [
			{
				"i": "d5b879c9-4d41-4f90-855f-3d9e1025a42d",
				"x": 0,
				"y": 0,
				"w": 12,
				"h": 4,
				"name": "Good requests",
				"queries": [
					{
						"query": "from(bucket: \"ingress_nginx\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n  |> filter(fn: (r) => r[\"namespace\"] == v.databases)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"prometheus_controller\")\n  |> filter(fn: (r) => r[\"_field\"] == \"nginx_ingress_controller_requests\")\n  |> drop(columns: [\"_measurement\", \"_field\", \"cluster\", \"namespace\", \"_start\", \"_stop\", \"controller_class\", \"controller_namespace\", \"controller_pod\", \"host\", \"ingress\", \"namespace\", \"prometheus_app\", \"url\"])\n  |> map(fn: (r) => ({r with status: int(v: r.status)}))\n  |> filter(fn: (r) => r[\"status\"] < 400)\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\n  |> yield(name: \"max\")",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "from(bucket: \"ingress_nginx\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n  |> filter(fn: (r) => r[\"namespace\"] == v.databases)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"prometheus_controller\")\n  |> filter(fn: (r) => r[\"_field\"] == \"nginx_ingress_controller_requests\")\n  |> drop(columns: [\"_measurement\", \"_field\", \"cluster\", \"namespace\", \"_start\", \"_stop\", \"controller_class\", \"controller_namespace\", \"controller_pod\", \"host\", \"ingress\", \"namespace\", \"prometheus_app\", \"url\"])\n  |> map(fn: (r) => ({r with status: int(v: r.status)}))\n  |> filter(fn: (r) => r[\"status\"] < 400)\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\n  |> yield(name: \"max\")",
							"range": null,
							"shifts": null
						},
						"source": "",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"0",
							""
						],
						"label": "requests",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "line",
				"colors": [
					{
						"id": "eeb13a5b-b97f-4a83-a556-3b5ead939719",
						"type": "scale",
						"hex": "#31C0F6",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "3f6e9461-c7cd-47b9-8d17-9f8c826efd45",
						"type": "scale",
						"hex": "#A500A5",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "eddcbaa1-6dfc-463c-8e1a-3e6134e45ef9",
						"type": "scale",
						"hex": "#FF7E27",
						"name": "Nineteen Eighty Four",
						"value": "0"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 2
				},
				"note": "",
				"noteVisibility": "default",
				"links": {
					"self": "/chronograf/v1/dashboards/6/cells/d5b879c9-4d41-4f90-855f-3d9e1025a42d"
				}
			},
			{
				"i": "cd98d7b6-1531-45a9-8206-f519fa82191f",
				"x": 0,
				"y": 4,
				"w": 12,
				"h": 4,
				"name": "Bad requests",
				"queries": [
					{
						"query": "from(bucket: \"ingress_nginx\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n  |> filter(fn: (r) => r[\"namespace\"] == v.databases)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"prometheus_controller\")\n  |> filter(fn: (r) => r[\"_field\"] == \"nginx_ingress_controller_requests\")\n  |> drop(columns: [\"_measurement\", \"_field\", \"cluster\", \"namespace\", \"_start\", \"_stop\", \"controller_class\", \"controller_namespace\", \"controller_pod\", \"host\", \"ingress\", \"namespace\", \"prometheus_app\", \"url\"])\n  |> map(fn: (r) => ({r with status: int(v: r.status)}))\n  |> filter(fn: (r) => r[\"status\"] >= 400)\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\n  |> yield(name: \"max\")",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "from(bucket: \"ingress_nginx\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n  |> filter(fn: (r) => r[\"namespace\"] == v.databases)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"prometheus_controller\")\n  |> filter(fn: (r) => r[\"_field\"] == \"nginx_ingress_controller_requests\")\n  |> drop(columns: [\"_measurement\", \"_field\", \"cluster\", \"namespace\", \"_start\", \"_stop\", \"controller_class\", \"controller_namespace\", \"controller_pod\", \"host\", \"ingress\", \"namespace\", \"prometheus_app\", \"url\"])\n  |> map(fn: (r) => ({r with status: int(v: r.status)}))\n  |> filter(fn: (r) => r[\"status\"] >= 400)\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\n  |> yield(name: \"max\")",
							"range": null,
							"shifts": null
						},
						"source": "",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"0",
							""
						],
						"label": "requests",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "line",
				"colors": [
					{
						"id": "eeb13a5b-b97f-4a83-a556-3b5ead939719",
						"type": "scale",
						"hex": "#31C0F6",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "3f6e9461-c7cd-47b9-8d17-9f8c826efd45",
						"type": "scale",
						"hex": "#A500A5",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "eddcbaa1-6dfc-463c-8e1a-3e6134e45ef9",
						"type": "scale",
						"hex": "#FF7E27",
						"name": "Nineteen Eighty Four",
						"value": "0"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 2
				},
				"note": "",
				"noteVisibility": "default",
				"links": {
					"self": "/chronograf/v1/dashboards/6/cells/cd98d7b6-1531-45a9-8206-f519fa82191f"
				}
			},
			{
				"i": "3a801614-4068-4207-a15d-5e503668ed07",
				"x": 0,
				"y": 8,
				"w": 12,
				"h": 4,
				"name": "Total Requests",
				"queries": [
					{
						"query": "from(bucket: \"ingress_nginx\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n  |> filter(fn: (r) => r[\"namespace\"] == v.databases)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"prometheus_controller\")\n  |> filter(fn: (r) => r[\"_field\"] == \"nginx_ingress_controller_requests\")\n  |> drop(columns: [\"_measurement\", \"_field\", \"cluster\", \"namespace\", \"_start\", \"_stop\", \"controller_class\", \"controller_namespace\", \"controller_pod\", \"host\", \"ingress\", \"namespace\", \"prometheus_app\", \"url\"])\n  |> map(fn: (r) => ({r with status: int(v: r.status)}))\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\n  |> yield(name: \"max\")",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "from(bucket: \"ingress_nginx\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n  |> filter(fn: (r) => r[\"namespace\"] == v.databases)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"prometheus_controller\")\n  |> filter(fn: (r) => r[\"_field\"] == \"nginx_ingress_controller_requests\")\n  |> drop(columns: [\"_measurement\", \"_field\", \"cluster\", \"namespace\", \"_start\", \"_stop\", \"controller_class\", \"controller_namespace\", \"controller_pod\", \"host\", \"ingress\", \"namespace\", \"prometheus_app\", \"url\"])\n  |> map(fn: (r) => ({r with status: int(v: r.status)}))\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\n  |> yield(name: \"max\")",
							"range": null,
							"shifts": null
						},
						"source": "",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"0",
							""
						],
						"label": "requests",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "line",
				"colors": [
					{
						"id": "eeb13a5b-b97f-4a83-a556-3b5ead939719",
						"type": "scale",
						"hex": "#31C0F6",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "3f6e9461-c7cd-47b9-8d17-9f8c826efd45",
						"type": "scale",
						"hex": "#A500A5",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "eddcbaa1-6dfc-463c-8e1a-3e6134e45ef9",
						"type": "scale",
						"hex": "#FF7E27",
						"name": "Nineteen Eighty Four",
						"value": "0"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 2
				},
				"note": "",
				"noteVisibility": "default",
				"links": {
					"self": "/chronograf/v1/dashboards/6/cells/3a801614-4068-4207-a15d-5e503668ed07"
				}
			}
		],
		"templates": [
			{
				"tempVar": ":databases:",
				"values": [
					{
						"value": "_monitoring",
						"type": "database",
						"selected": true
					}
				],
				"id": "3b96f1f3-e110-4114-ac6b-141feb25b825",
				"type": "databases",
				"label": "",
				"query": {
					"influxql": "SHOW DATABASES",
					"measurement": "",
					"tagKey": "",
					"fieldKey": ""
				},
				"sourceID": "dynamic",
				"links": {
					"self": "/chronograf/v1/dashboards/6/templates/3b96f1f3-e110-4114-ac6b-141feb25b825"
				}
			},
			{
				"tempVar": ":cluster:",
				"values": [
					{
						"value": "base-lsp.lsst.codes",
						"type": "tagValue",
						"selected": true
					}
				],
				"id": "b92ea89d-7263-477c-ad36-74a292f7fa18",
				"type": "tagValues",
				"label": "",
				"query": {
					"influxql": "SHOW TAG VALUES ON :database: FROM :measurement: WITH KEY=:tagKey:",
					"db": "argocd",
					"measurement": "kubernetes_pod_container",
					"tagKey": "cluster",
					"fieldKey": ""
				},
				"sourceID": "dynamic",
				"links": {
					"self": "/chronograf/v1/dashboards/6/templates/b92ea89d-7263-477c-ad36-74a292f7fa18"
				}
			}
		],
		"name": "HTTP Requests",
		"organization": "default",
		"links": {
			"self": "/chronograf/v1/dashboards/6",
			"cells": "/chronograf/v1/dashboards/6/cells",
			"templates": "/chronograf/v1/dashboards/6/templates"
		}
	}
}
