{
 "meta": {
  "version": "1",
  "type": "dashboard",
  "name": "K8s applications-Template",
  "description": "template created from dashboard: K8s applications"
 },
 "content": {
  "data": {
   "type": "dashboard",
   "attributes": {
    "name": "K8s applications",
    "description": ""
   },
   "relationships": {
    "label": {
     "data": []
    },
    "cell": {
     "data": [
      {
       "type": "cell",
       "id": "09996a671e14d000"
      },
      {
       "type": "cell",
       "id": "09996a8df514d000"
      },
      {
       "type": "cell",
       "id": "09a2935a6cbfe000"
      },
      {
       "type": "cell",
       "id": "09a7b8fc0131a000"
      }
     ]
    },
    "variable": {
     "data": [
      {
       "type": "variable",
       "id": "099961993d8cc000"
      },
      {
       "type": "variable",
       "id": "099966d0588cc000"
      }
     ]
    }
   }
  },
  "included": [
   {
    "id": "09996a671e14d000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 0,
     "w": 12,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "09996a671e14d000"
      }
     }
    }
   },
   {
    "id": "09996a8df514d000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 8,
     "w": 12,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "09996a8df514d000"
      }
     }
    }
   },
   {
    "id": "09a2935a6cbfe000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 4,
     "w": 12,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "09a2935a6cbfe000"
      }
     }
    }
   },
   {
    "id": "09a7b8fc0131a000",
    "type": "cell",
    "attributes": {
     "x": 0,
     "y": 12,
     "w": 12,
     "h": 4
    },
    "relationships": {
     "view": {
      "data": {
       "type": "view",
       "id": "09a7b8fc0131a000"
      }
     }
    }
   },
   {
    "type": "view",
    "id": "09996a671e14d000",
    "attributes": {
     "name": "Pod memory usage",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "from(bucket: v.K8s_application)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kubernetes_pod_container\")\n  |> filter(fn: (r) => r[\"_field\"] == \"memory_usage_bytes\")\n  |> drop(columns: [\"_measurement\", \"_field\", \"_start\", \"_stop\", \"host\", \"node_name\", \"namespace\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [
          {
           "name": "mean"
          }
         ],
         "aggregateWindow": {
          "period": "auto",
          "fillValues": false
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "0",
         ""
        ],
        "label": "bytes",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "staticLegend": {
       "colorizeRows": true,
       "opacity": 1,
       "orientationThreshold": 100000000,
       "widthRatio": 1
      },
      "geom": "line",
      "colors": [
       {
        "id": "f29b554c-fd1c-406e-a740-3c1b53262f67",
        "type": "scale",
        "hex": "#31C0F6",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "bac9b65d-b253-4d69-93e2-d319c132bc63",
        "type": "scale",
        "hex": "#A500A5",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "b2864bc1-8bba-4043-8d8d-c02ef359e85e",
        "type": "scale",
        "hex": "#FF7E27",
        "name": "Nineteen Eighty Four",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "",
      "generateXAxisTicks": [],
      "xTotalTicks": 0,
      "xTickStart": 0,
      "xTickStep": 0,
      "yColumn": "",
      "generateYAxisTicks": [],
      "yTotalTicks": 0,
      "yTickStart": 0,
      "yTickStep": 0,
      "shadeBelow": false,
      "position": "overlaid",
      "timeFormat": "",
      "hoverDimension": "auto",
      "legendColorizeRows": true,
      "legendHide": false,
      "legendOpacity": 1,
      "legendOrientationThreshold": 100000000
     }
    }
   },
   {
    "type": "view",
    "id": "09996a8df514d000",
    "attributes": {
     "name": "Pod CPU usage",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "from(bucket: v.K8s_application)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kubernetes_pod_container\")\n  |> filter(fn: (r) => r[\"_field\"] == \"cpu_usage_nanocores\")\n  |> map(fn: (r) => ({r with _value: float(v: r._value) / 1000000000.0}))\n  |> drop(columns: [\"_measurement\", \"_field\", \"_start\", \"_stop\", \"host\", \"node_name\", \"namespace\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [
          {
           "name": "mean"
          }
         ],
         "aggregateWindow": {
          "period": "auto",
          "fillValues": false
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "0",
         ""
        ],
        "label": "cores",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "staticLegend": {
       "colorizeRows": true,
       "opacity": 1,
       "orientationThreshold": 100000000,
       "widthRatio": 1
      },
      "geom": "line",
      "colors": [
       {
        "id": "f29b554c-fd1c-406e-a740-3c1b53262f67",
        "type": "scale",
        "hex": "#31C0F6",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "bac9b65d-b253-4d69-93e2-d319c132bc63",
        "type": "scale",
        "hex": "#A500A5",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "b2864bc1-8bba-4043-8d8d-c02ef359e85e",
        "type": "scale",
        "hex": "#FF7E27",
        "name": "Nineteen Eighty Four",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "generateXAxisTicks": [],
      "xTotalTicks": 0,
      "xTickStart": 0,
      "xTickStep": 0,
      "yColumn": "_value",
      "generateYAxisTicks": [],
      "yTotalTicks": 0,
      "yTickStart": 0,
      "yTickStep": 0,
      "shadeBelow": false,
      "position": "overlaid",
      "timeFormat": "",
      "hoverDimension": "auto",
      "legendColorizeRows": true,
      "legendHide": false,
      "legendOpacity": 1,
      "legendOrientationThreshold": 100000000
     }
    }
   },
   {
    "type": "view",
    "id": "09a2935a6cbfe000",
    "attributes": {
     "name": "Pod memory usage vs limit",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "t1 = from(bucket: v.K8s_application)\n   |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n   |> filter(fn: (r) => r[\"_measurement\"] == \"kubernetes_pod_container\")\n   |> filter(fn: (r) => r[\"_field\"] == \"resource_limits_memory_bytes\")\n   |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n   |> drop(columns: [\"_start\", \"_stop\", \"host\", \"node_name\", \"namespace\"])\n   |> last()\n   |> findRecord(idx:0, fn: (key) => key._field == \"resource_limits_memory_bytes\")\n\nfrom(bucket: v.K8s_application)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kubernetes_pod_container\")\n  |> filter(fn: (r) => r[\"_field\"] == \"memory_usage_bytes\")\n  |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n  |> drop(columns: [\"_start\", \"_stop\", \"host\", \"node_name\", \"namespace\"])\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")  //|> drop(columns: [\"_measurement\", \"_field\", \"_start\", \"_stop\", \"host\", \"node_name\", \"namespace\"])\n  |> map(fn: (r) => ({r with fb: float(v: r.memory_usage_bytes)}))\n  |> map(fn: (r) => ({r with fl: float(v: t1._value)}))\n  |> map(fn: (r) => ({r with _value: float(v: 100.0 * (float(v: r.fb)/float(v: r.fl)))})) \n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")\n  ",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [
          {
           "name": "mean"
          }
         ],
         "aggregateWindow": {
          "period": "auto",
          "fillValues": false
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "0",
         ""
        ],
        "label": "% memory limit used",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "staticLegend": {
       "colorizeRows": true,
       "opacity": 1,
       "orientationThreshold": 100000000,
       "widthRatio": 1
      },
      "geom": "line",
      "colors": [
       {
        "id": "f29b554c-fd1c-406e-a740-3c1b53262f67",
        "type": "scale",
        "hex": "#31C0F6",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "bac9b65d-b253-4d69-93e2-d319c132bc63",
        "type": "scale",
        "hex": "#A500A5",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "b2864bc1-8bba-4043-8d8d-c02ef359e85e",
        "type": "scale",
        "hex": "#FF7E27",
        "name": "Nineteen Eighty Four",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "generateXAxisTicks": [],
      "xTotalTicks": 0,
      "xTickStart": 0,
      "xTickStep": 0,
      "yColumn": "_value",
      "generateYAxisTicks": [],
      "yTotalTicks": 0,
      "yTickStart": 0,
      "yTickStep": 0,
      "shadeBelow": false,
      "position": "overlaid",
      "timeFormat": "",
      "hoverDimension": "auto",
      "legendColorizeRows": true,
      "legendHide": false,
      "legendOpacity": 1,
      "legendOrientationThreshold": 100000000
     }
    }
   },
   {
    "type": "view",
    "id": "09a7b8fc0131a000",
    "attributes": {
     "name": "Pod CPU usage vs limit",
     "properties": {
      "shape": "chronograf-v2",
      "queries": [
       {
        "text": "t1 = from(bucket: v.K8s_application)\n   |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n   |> filter(fn: (r) => r[\"_measurement\"] == \"kubernetes_pod_container\")\n   |> filter(fn: (r) => r[\"_field\"] == \"resource_limits_millicpu_units\")\n   |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n   |> drop(columns: [\"_start\", \"_stop\", \"host\", \"node_name\", \"namespace\"])\n   |> last()\n   |> findRecord(idx:0, fn: (key) => key._field == \"resource_limits_millicpu_units\")\n\nfrom(bucket: v.K8s_application)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kubernetes_pod_container\")\n  |> filter(fn: (r) => r[\"_field\"] == \"cpu_usage_nanocores\")\n  |> filter(fn: (r) => r[\"cluster\"] == v.cluster)\n  |> drop(columns: [\"_start\", \"_stop\", \"host\", \"node_name\", \"namespace\"])\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")  //|> drop(columns: [\"_measurement\", \"_field\", \"_start\", \"_stop\", \"host\", \"node_name\", \"namespace\"])\n  |> map(fn: (r) => ({r with fc: (float(v: r.cpu_usage_nanocores) / 1000000.0) }))\n  |> map(fn: (r) => ({r with fl: float(v: t1._value)}))\n  |> map(fn: (r) => ({r with _value: float(v: 100.0 * (float(v: r.fc)/float(v: r.fl)))})) \n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")\n  ",
        "editMode": "advanced",
        "name": "",
        "builderConfig": {
         "buckets": [],
         "tags": [
          {
           "key": "_measurement",
           "values": [],
           "aggregateFunctionType": "filter"
          }
         ],
         "functions": [
          {
           "name": "mean"
          }
         ],
         "aggregateWindow": {
          "period": "auto",
          "fillValues": false
         }
        }
       }
      ],
      "axes": {
       "x": {
        "bounds": [
         "",
         ""
        ],
        "label": "",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       },
       "y": {
        "bounds": [
         "0",
         ""
        ],
        "label": "% CPU limit used",
        "prefix": "",
        "suffix": "",
        "base": "10",
        "scale": "linear"
       }
      },
      "type": "xy",
      "staticLegend": {
       "colorizeRows": true,
       "opacity": 1,
       "orientationThreshold": 100000000,
       "widthRatio": 1
      },
      "geom": "line",
      "colors": [
       {
        "id": "f29b554c-fd1c-406e-a740-3c1b53262f67",
        "type": "scale",
        "hex": "#31C0F6",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "bac9b65d-b253-4d69-93e2-d319c132bc63",
        "type": "scale",
        "hex": "#A500A5",
        "name": "Nineteen Eighty Four",
        "value": 0
       },
       {
        "id": "b2864bc1-8bba-4043-8d8d-c02ef359e85e",
        "type": "scale",
        "hex": "#FF7E27",
        "name": "Nineteen Eighty Four",
        "value": 0
       }
      ],
      "note": "",
      "showNoteWhenEmpty": false,
      "xColumn": "_time",
      "generateXAxisTicks": [],
      "xTotalTicks": 0,
      "xTickStart": 0,
      "xTickStep": 0,
      "yColumn": "_value",
      "generateYAxisTicks": [],
      "yTotalTicks": 0,
      "yTickStart": 0,
      "yTickStep": 0,
      "shadeBelow": false,
      "position": "overlaid",
      "timeFormat": "",
      "hoverDimension": "auto",
      "legendColorizeRows": true,
      "legendHide": false,
      "legendOpacity": 1,
      "legendOrientationThreshold": 100000000
     }
    }
   },
   {
    "id": "099961993d8cc000",
    "type": "variable",
    "attributes": {
     "name": "K8s_application",
     "arguments": {
      "type": "query",
      "values": {
       "query": "import \"strings\"\n\nbuckets()\n |> rename(columns: {\"name\": \"_value\"})\n |> keep(columns: [\"_value\"])\n |> filter(fn: (r) => (not strings.hasPrefix(prefix:\"_\", v: r._value)\n                        and not strings.hasSuffix(suffix:\"_\", v: r._value)))",
       "language": "flux"
      }
     },
     "selected": []
    },
    "relationships": {
     "label": {
      "data": []
     }
    }
   },
   {
    "id": "099966d0588cc000",
    "type": "variable",
    "attributes": {
     "name": "cluster",
     "arguments": {
      "type": "query",
      "values": {
       "query": "import \"influxdata/influxdb/schema\"\n// ArgoCD is in every cluster\nschema.tagValues(bucket: \"argocd\", tag: \"cluster\")",
       "language": "flux"
      }
     },
     "selected": []
    },
    "relationships": {
     "label": {
      "data": []
     }
    }
   }
  ]
 },
 "labels": []
}